package by.sazonenka.katana.persistence.domain;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.google.common.base.Objects;

/**
 * Represents a model of a record in the <code>"OUTPUT_FILE"</code> table.
 *
 * <p>The <code>"OUTPUT_FILE"</code> table contains the following columns:
 * <ul>
 * <li><code>ID</code>: The surrogate identifier of the file.
 * <li><code>NAME</code>: The name of the file.
 * <li><code>ORDER_IN_CONFIG</code>: The order in which the file appears
 *     in the list of all files for the config.
 * <li><code>VERSION</code>: The utility integer used in optimistic locking.
 * <li><code>PARENT_ID</code>: The foreign key to the <code>"OUTPUT_FILE"</code> table.
 * <li><code>CONFIG_ID</code>: The foreign key to the <code>"CONSTRAINT_CONFIG"</code> table.
 * </ul>
 *
 * <p>While using the {@link OutputFile} class, a client
 * should consider the following caveats:
 * <ul>
 * <li><code>id</code> property is designed to be autogenerated.
 *     A client has no possibility to update it manually.
 * <li><code>version</code> property is designed to be automatically updated
 *     by a persistence provider. A client has no possibility to update it manually.
 * <li><code>findFilesByConfig</code> named query is designed to help
 *     in fetching a list of output files associated with the dataset.
 * <li><code>getFileCountByConfig</code> named query is designed to help
 *     in getting a count of output files associated with the dataset.
 * <li><code>findFilesByParent</code> named query is designed to help
 *     in fetching a list of output files associated with the given parent.
 * <li>Deletion of an instance of the {@link OutputFile} cascades to all the
 *     {@link OutputField}s associated with it.
 * <li>Deletion of an instance of the parent {@link OutputFile} results in setting
 *     <code>PARENT_ID = null</code> on all the child {@link OutputFile}s associated with it.
 * </ul>
 *
 * @author Aliaksandr Sazonenka
 * @see ConstraintConfig
 * @see ValidationRule
 * @see OutputField
 */
@Entity
@Table(name = "OUTPUT_FILE")
@NamedQueries({
  @NamedQuery(name = "findFilesByConfig",
      query = "SELECT f FROM OutputFile f WHERE f.config = :config ORDER BY orderInConfig"),
  @NamedQuery(name = "getFileCountByConfig",
      query = "SELECT COUNT(f) FROM OutputFile f WHERE f.config = :config"),
  @NamedQuery(name = "findFilesByNameAndConfig",
      query = "SELECT f FROM OutputFile f WHERE f.name = :name AND f.config = :config"),
  @NamedQuery(name = "findFilesByParent",
      query = "SELECT f FROM OutputFile f WHERE f.parent = :parent ORDER BY orderInConfig")
})
public class OutputFile extends GenericDomain {

  private static final long serialVersionUID = -5757922946508002648L;

  @Column(name = "NAME")
  private String name;

  @Column(name = "ORDER_IN_CONFIG")
  private int orderInConfig;

  @ManyToOne(optional = true)
  @JoinColumn(name = "PARENT_ID")
  private OutputFile parent;

  @ManyToOne
  @JoinColumn(name = "CONFIG_ID")
  private ConstraintConfig config;

  /** Constructs a new {@link OutputFile} instance. */
  public OutputFile() {
    /* Default constructor to ensure serialization. */
  }

  /** Constructs a new {@link OutputFile} instance with the given properties. */
  public OutputFile(String name, int orderInConfig, OutputFile parent, ConstraintConfig config) {
    this.name = name;
    this.orderInConfig = orderInConfig;
    this.parent = parent;
    this.config = config;
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == null) {
      return false;
    }
    if (getClass() != obj.getClass()) {
      return false;
    }
    OutputFile that = (OutputFile) obj;
    return Objects.equal(name, that.name)
        && Objects.equal(orderInConfig, that.orderInConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(name, orderInConfig);
  }

  @Override
  public String toString() {
    return Objects.toStringHelper(this)
            .add("id", id)
            .add("name", name)
            .add("orderInConfig", orderInConfig)
            .toString();
  }

  /** Returns the name of the file. */
  public String getName() { return name; }
  /** Sets the name of the file. */
  public void setName(String name) { this.name = name; }

  /** Returns the order of the file in the config. */
  public int getOrderInConfig() { return orderInConfig; }
  /** Sets the order of the file in the config. */
  public void setOrderInConfig(int orderInConfig) { this.orderInConfig = orderInConfig; }

  /**
   * Returns the parent {@link OutputFile} this file is associated with,
   * or <code>null</code> if this file doesn't have a parent.
   */
  public OutputFile getParent() { return parent; }
  /** Associates the current file with the given parent {@link OutputFile}. */
  public void setParent(OutputFile parent) { this.parent = parent; }

  /** Returns the {@link ConstraintConfig} this file is associated with. */
  public ConstraintConfig getConfig() { return config; }
  /** Associates the current file with the given {@link ConstraintConfig}. */
  public void setConfig(ConstraintConfig config) { this.config = config; }

}

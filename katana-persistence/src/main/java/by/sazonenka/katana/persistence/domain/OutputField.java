package by.sazonenka.katana.persistence.domain;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.google.common.base.Objects;

/**
 * Represents a model of a record in the <code>"OUTPUT_FIELD"</code> table.
 *
 * <p>The <code>"OUTPUT_FIELD"</code> table contains the following columns:
 * <ul>
 * <li><code>ID</code>: The surrogate identifier of the field.
 * <li><code>NAME</code>: The name of the field.
 * <li><code>ORDER_IN_FILE</code>: The order in which the field appears
 *     in the list of all fields for the file.
 * <li><code>VERSION</code>: The utility integer used in optimistic locking.
 * <li><code>FILE_ID</code>: The foreign key to the <code>"OUTPUT_FILE"</code> table.
 * <li><code>RULE_ID</code>: The foreign key to the <code>"VALIDATION_RULE"</code> table.
 * </ul>
 *
 * <p>While using the {@link OutputField} class, a client
 * should consider the following caveats:
 * <ul>
 * <li><code>id</code> property is designed to be autogenerated.
 *     A client has no possibility to update it manually.
 * <li><code>version</code> property is designed to be automatically updated
 *     by a persistence provider. A client has no possibility to update it manually.
 * <li><code>findFieldsByFile</code> named query is designed to help
 *     in fetching a list of output fields associated with the given file.
 * <li><code>getFieldCountByFile</code> named query is designed to help
 *     in getting a count of output fields associated with the given file.
 * <li><code>findFieldsByRule</code> named query is designed to help
 *     in fetching a list of output fields associated with the given rule.
 * </ul>
 *
 * @author Aliaksandr Sazonenka
 * @see ConstraintConfig
 * @see ValidationRule
 * @see OutputFile
 */
@Entity
@Table(name = "OUTPUT_FIELD")
@NamedQueries({
  @NamedQuery(name = "findFieldsByFile",
      query = "SELECT f FROM OutputField f WHERE f.file = :file ORDER BY orderInFile"),
  @NamedQuery(name = "getFieldCountByFile",
      query = "SELECT COUNT(f) FROM OutputField f WHERE f.file = :file"),
  @NamedQuery(name = "findFieldsByNameAndFile",
      query = "SELECT f FROM OutputField f WHERE f.name = :name AND f.file = :file"),
  @NamedQuery(name = "findFieldsByRule",
      query = "SELECT f FROM OutputField f WHERE f.rule = :rule")
})
public class OutputField extends GenericDomain {

  private static final long serialVersionUID = -7987715477738093733L;

  @Column(name = "NAME")
  private String name;

  @Column(name = "ORDER_IN_FILE")
  private int orderInFile;

  @ManyToOne
  @JoinColumn(name = "FILE_ID")
  private OutputFile file;

  @ManyToOne(optional = true)
  @JoinColumn(name = "RULE_ID")
  private ValidationRule rule;

  /** Constructs a new {@link OutputField} instance. */
  public OutputField() {
    /* Default constructor to ensure serialization. */
  }

  /** Constructs a new {@link OutputField} instance with the given properties. */
  public OutputField(String name, int orderInFile, OutputFile file, ValidationRule rule) {
    this.name = name;
    this.orderInFile = orderInFile;
    this.file = file;
    this.rule = rule;
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == null) {
      return false;
    }
    if (getClass() != obj.getClass()) {
      return false;
    }
    OutputField that = (OutputField) obj;
    return Objects.equal(name, that.name)
        && Objects.equal(orderInFile, that.orderInFile);
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(name, orderInFile);
  }

  @Override
  public String toString() {
    return Objects.toStringHelper(this)
            .add("id", id)
            .add("name", name)
            .add("orderInFile", orderInFile)
            .toString();
  }

  /** Returns the name of the field. */
  public String getName() { return name; }
  /** Sets the name of the field. */
  public void setName(String name) { this.name = name; }

  /** Returns the order of the field in the file. */
  public int getOrderInFile() { return orderInFile; }
  /** Sets the order of the field in the file. */
  public void setOrderInFile(int orderInFile) { this.orderInFile = orderInFile; }

  /** Returns the {@link OutputFile} this field is associated with. */
  public OutputFile getFile() { return file; }
  /** Associates the current field with the given {@link OutputFile}. */
  public void setFile(OutputFile file) { this.file = file; }

  /**
   * Returns the {@link ValidationRule} this field is associated with,
   * or <code>null</code> if this field doesn't have an association.
   */
  public ValidationRule getRule() { return rule; }
  /** Associates the current field with the given {@link ValidationRule}. */
  public void setRule(ValidationRule rule) { this.rule = rule; }

}

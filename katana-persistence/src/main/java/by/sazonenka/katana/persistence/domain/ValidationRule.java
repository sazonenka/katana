package by.sazonenka.katana.persistence.domain;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.google.common.base.Objects;

/**
 * Represents a model of a record in the <code>"VALIDATION_RULE"</code> table.
 *
 * <p>The <code>"VALIDATION_RULE"</code> table contains the following columns:
 * <ul>
 * <li><code>ID</code>: The surrogate identifier of the rule.
 * <li><code>NAME</code>: The name of the rule.
 * <li><code>NULLABLE</code>: The flag indicating if a field can contain 'null' values.
 * <li><code>REG_EXP</code>: The regular expression that will be applied
 *     to a field's value while data validation.
 * <li><code>DESCRIPTION</code>: The detailed explanation of the rule.
 * <li><code>ORDER_IN_CONFIG</code>: The order in which the rule appears
 *     in the list of all rules for the config.
 * <li><code>VERSION</code>: The utility integer used in optimistic locking.
 * <li><code>CONFIG_ID</code>: The foreign key to the <code>"CONSTRAINT_CONFIG"</code> table.
 * </ul>
 *
 * <p>While using the {@link ValidationRule} class, a client
 * should consider the following caveats:
 * <ul>
 * <li><code>id</code> property is designed to be autogenerated.
 *     A client has no possibility to update it manually.
 * <li><code>version</code> property is designed to be automatically updated
 *     by a persistence provider. A client has no possibility to update it manually.
 * <li><code>findRulesByConfig</code> named query is designed to help
 *     in fetching a list of validation rules associated with the dataset.
 * <li><code>getRuleCountByConfig</code> named query is designed to help
 *     in getting a count of validation rules associated with the dataset.
 * <li>Deletion of an instance of the {@link ValidationRule} results in setting
 *     <code>RULE_ID = null</code> on all the {@link OutputField}s associated with it.
 * </ul>
 *
 * @author Aliaksandr Sazonenka
 * @see ConstraintConfig
 * @see OutputFile
 * @see OutputField
 */
@Entity
@Table(name = "VALIDATION_RULE")
@NamedQueries({
  @NamedQuery(name = "findRulesByConfig",
      query = "SELECT r FROM ValidationRule r WHERE r.config = :config ORDER BY orderInConfig"),
  @NamedQuery(name = "getRuleCountByConfig",
      query = "SELECT COUNT(r) FROM ValidationRule r WHERE r.config = :config"),
  @NamedQuery(name = "findRulesByNameAndConfig",
      query = "SELECT r FROM ValidationRule r WHERE r.name = :name AND r.config = :config")
})
public class ValidationRule extends GenericDomain {

  private static final long serialVersionUID = -3645053184290403123L;

  @Column(name = "NAME")
  private String name;

  @Column(name = "NULLABLE")
  private boolean nullable;

  @Column(name = "REG_EXP")
  private String regexp;

  @Column(name = "DESCRIPTION")
  private String description;

  @Column(name = "ORDER_IN_CONFIG")
  private int orderInConfig;

  @ManyToOne
  @JoinColumn(name = "CONFIG_ID")
  private ConstraintConfig config;

  /** Constructs a new {@link ValidationRule} instance. */
  public ValidationRule() {
    /* Default constructor to ensure serialization. */
  }

  /** Constructs a new {@link ValidationRule} instance with the given properties. */
  public ValidationRule(String name, boolean nullable, String regexp, String description,
      int orderInConfig, ConstraintConfig config) {
    this.name = name;
    this.nullable = nullable;
    this.regexp = regexp;
    this.description = description;
    this.orderInConfig = orderInConfig;
    this.config = config;
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == null) {
      return false;
    }
    if (getClass() != obj.getClass()) {
      return false;
    }
    ValidationRule that = (ValidationRule) obj;
    return Objects.equal(name, that.name)
        && Objects.equal(nullable, that.nullable)
        && Objects.equal(regexp, that.regexp)
        && Objects.equal(description, that.description)
        && Objects.equal(orderInConfig, that.orderInConfig)
        && Objects.equal(config, that.config);
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(name, nullable, regexp, description, orderInConfig, config);
  }

  @Override
  public String toString() {
    return Objects.toStringHelper(this)
            .add("id", id)
            .add("name", name)
            .add("nullable", nullable)
            .add("regexp", regexp)
            .add("description", description)
            .add("orderInConfig", orderInConfig)
            .toString();
  }

  /** Returns the name of the rule. */
  public String getName() { return name; }
  /** Sets the name of the rule. */
  public void setName(String name) { this.name = name; }

  /** Returns the <code>nullable</code> property of the rule. */
  public boolean isNullable() { return nullable; }
  /** Sets the <code>nullable</code> property of the rule. */
  public void setNullable(boolean nullable) { this.nullable = nullable; }

  /** Returns the <code>regexp</code> property of the rule. */
  public String getRegexp() { return regexp; }
  /** Sets the <code>regexp</code> property of the rule. */
  public void setRegexp(String regexp) { this.regexp = regexp; }

  /** Returns the description of the rule. */
  public String getDescription() { return description; }
  /** Sets the description of the rule. */
  public void setDescription(String description) { this.description = description; }

  /** Returns the order of the rule in the config. */
  public int getOrderInConfig() { return orderInConfig; }
  /** Sets the order of the rule in the config. */
  public void setOrderInConfig(int orderInConfig) { this.orderInConfig = orderInConfig; }

  /** Returns the {@link ConstraintConfig} this rule is associated with. */
  public ConstraintConfig getConfig() { return config; }
  /** Associates the current rule with the given {@link ConstraintConfig}. */
  public void setConfig(ConstraintConfig config) { this.config = config; }

}

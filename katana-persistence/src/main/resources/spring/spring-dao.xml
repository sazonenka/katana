<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

  <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
  <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
  <context:property-placeholder location="classpath:jdbc.properties"/>

  <!-- BoneCP DataSource -->
  <bean id="dataSource"
        class="com.jolbox.bonecp.BoneCPDataSource"
        destroy-method="close">
    <property name="driverClass" value="${jdbc.driver}"/>
    <property name="jdbcUrl" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <property name="partitionCount" value="${jdbc.partitionCount}"/>
    <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
    <property name="minConnectionsPerPartition" value="${jdbc.minConnectionsPerPartition}"/>
    <property name="maxConnectionsPerPartition" value="${jdbc.maxConnectionsPerPartition}"/>
    <property name="idleConnectionTestPeriodInMinutes" value="${jdbc.idleConnectionTestPeriodInMinutes}"/>
    <property name="idleMaxAgeInMinutes" value="${jdbc.idleMaxAgeInMinutes}"/>
    <property name="connectionTestStatement" value="${jdbc.connectionTestStatement}"/>
    <property name="statementsCacheSize" value="${jdbc.statementsCacheSize}"/>
    <property name="releaseHelperThreads" value="${jdbc.releaseHelperThreads}"/>
  </bean>

  <!-- Hibernate SessionFactory -->
  <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
        <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
        <prop key="hibernate.connection.provider_class">com.jolbox.bonecp.provider.BoneCPConnectionProvider</prop>
      </props>
    </property>
    <property name="packagesToScan" value="by.sazonenka.katana.persistence.domain"/>
  </bean>

  <!-- DAO Scanning -->
  <context:component-scan base-package="by.sazonenka.katana.persistence.dao.impl"/>

  <!-- Transaction Configuration -->
  <tx:annotation-driven/>
  <bean id="transactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <!-- Persistence Method Logging -->
  <bean id="daoMethodsLogger"
        class="by.sazonenka.katana.persistence.interceptor.DaoMethodsLogger"/>

  <aop:config>
    <aop:pointcut id="daoMethods"
                  expression="execution(* by.sazonenka.katana.persistence.dao.*.*(..))"/>

    <aop:aspect id="daoMethodsLoggerAspect" ref="daoMethodsLogger" >
      <aop:before pointcut-ref="daoMethods"
                  method="logParameters"/>
      <aop:after-returning pointcut-ref="daoMethods"
                           method="logReturnValue"
                           returning="returnValue"/>
      <aop:after-throwing pointcut-ref="daoMethods"
                          method="logException"
                          throwing="exception"/>
    </aop:aspect>
  </aop:config>

</beans>
